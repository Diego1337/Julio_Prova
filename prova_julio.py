# # -*- coding: utf-8 -*-
# """Prova Julio

# Automatically generated by Colab.

# Original file is located at
#     https://colab.research.google.com/drive/11tOoNdK-OD2yQmCEPunhy8Sw_wCVBKbH

# (20) Considerando a matriz abaixo, crie uma função chamada uso_maximo() que receba como parâmetro uma lista com os valores de uso de CPU de uma região e retorne o valor máximo de uso. Teste essa função para cada região da matriz.
# """

uso_cpu = [
[20, 25, 40, 50, 45, 60, 55, 35, 70, 65],
[30, 35, 50, 60, 40, 55, 60, 45, 50, 55],
[15, 20, 30, 25, 35, 40, 45, 50, 55, 60],
[10, 15, 25, 35, 45, 50, 55, 60, 65, 70],
]


regiao1 = [20, 25, 40, 50, 45, 60, 55, 35, 70, 65]
regiao2 = [30, 35, 50, 60, 40, 55, 60, 45, 50, 55]
regiao3 = [15, 20, 30, 25, 35, 40, 45, 50, 55, 60]
regiao4 = [10, 15, 25, 35, 45, 50, 55, 60, 65, 70]

def uso_maximo(lista):
    maximo = max(lista, key=int)
    return maximo

uso_maximo(regiao4)

# """(20) Crie uma função chamada acima_da_media() que receba uma lista com os dados de uma região e retorne quantos valores estão acima da média daquela região. Teste a função para todas as regiões da matriz."""

regiao1 = [20, 25, 40, 50, 45, 60, 55, 35, 70, 65]
regiao2 = [30, 35, 50, 60, 40, 55, 60, 45, 50, 55]
regiao3 = [15, 20, 30, 25, 35, 40, 45, 50, 55, 60]
regiao4 = [10, 15, 25, 35, 45, 50, 55, 60, 65, 70]

def acima_da_media(lista):
  soma = sum(lista)
  media = soma / len(lista)
  for i in lista:
    if i > media:
      resultado = i
      print("valor:", resultado)
  # print(soma)
  # print(media)

acima_da_media(regiao1)
print("______________")
acima_da_media(regiao2)
print("______________")
acima_da_media(regiao3)
print("______________")
acima_da_media(regiao4)

# """(20) Crie uma função chamada dados_decrescente que recebe como parâmetro uma lista com os valores de uso de CPU de uma região. A função deve retornar a lista organizada em ordem decrescente, do menor uso de CPU para o maior. Teste a função para todas as regiões da matriz"""

def dados_decrescente(lista):
  lista.sort(reverse=True)
  print(lista)

dados_decrescente(regiao1)
print("----------------------------------------")
dados_decrescente(regiao2)
print("----------------------------------------")
dados_decrescente(regiao3)
print("----------------------------------------")
dados_decrescente(regiao4)

"""(20) Utilizando a biblioteca pandas, crie um DataFrame com os dados da matriz acima. Os nomes das colunas devem ser **["hora_1", "hora_2",..., "hora_10"]** e as linhas representam as regiões **["us-east-1", "us-west-2", "eu-central-1", "sa-east-1" ]**.   Em seguida, adicione uma nova coluna ao DataFrame com o nome "uso_médio" que contenha a média de uso de CPU de cada hora. Exiba o DataFrame resultante.  """


import pandas as pd

uso_cpu = {

"hora_1" : [20, 30, 15, 10],
"hora_2" : [23, 35, 20, 15],
"hora_3" : [40, 50, 30, 25],
"hora_4" : [50, 60, 25, 35],
"hora_5" : [45, 40, 35, 45],
"hora_6" : [60, 55, 40, 50],
"hora_7" : [55, 60, 45, 55],
"hora_8" : [35, 45, 50, 60],
"hora_9" : [70, 50, 55, 65],
"hora_10" : [65, 55, 60, 70]
}

df_cpu = pd.DataFrame(uso_cpu)
df_cpu.index = ["us-east-1", "us-west-2", "eu-central-1", "sa-east-1"]
df_cpu

""" Em seguida, adicione uma nova coluna ao DataFrame com o nome "uso_médio" que contenha a média de uso de CPU de cada hora. Exiba o DataFrame resultante."""

df_cpu["uso_médio"] = df_cpu.mean(axis=1)
df_cpu

"teste commit"